import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from streamlit.components.v1 import iframe
from your_module import mapa_barris, mapa_districtes  # Asegúrate de importar tus funciones de mapeo
import streamlit as st
import geopandas as gpd
import pandas as pd
import folium
from streamlit_folium import st_folium

















# Cargar datos
gdf_districtes = gpd.read_file('0301100100_UNITATS_ADM_POLIGONS.json')
gdf_districtes = gdf_districtes[gdf_districtes['TIPUS_UA'] == 'DISTRICTE']
gdf_lloguer_districtes = gdf_districtes.merge(df_lloguer_mapa, how='left', left_on=['FID'], right_on=['codi'])

anys = df_padro_obra_nova_districtes['any'].unique()

def categoria_lloguer(row, quantile_33, quantile_66):
    if row['lloguer_ajustat'] == 'nd':
        return 'nd'
    elif row['lloguer_ajustat'] < quantile_33:
        return 'rang baix'
    elif quantile_33 <= row['lloguer_ajustat'] < quantile_66:
        return 'rang mitjà'
    elif row['lloguer_ajustat'] >= quantile_66:
        return 'rang alt'

gdf_lloguer_districtes['categoria'] = gdf_lloguer_districtes.apply(lambda row: categoria_lloguer(row, quantile_33, quantile_66), axis=1)
gdf_lloguer_barris['categoria'] = gdf_lloguer_barris.apply(lambda row: categoria_lloguer(row, quantile_33, quantile_66), axis=1)

gdf_compra_districtes['categoria'] = None
for index, row in gdf_compra_districtes.iterrows():
    if row['lloguer_ajustat'] == 'nd':
        gdf_compra_districtes.at[index, 'categoria'] = 'nd'
    elif row['lloguer_ajustat'] < quantile_33_compra:
        gdf_compra_districtes.at[index, 'categoria'] = 'rang baix'
    elif quantile_33_compra <= row['lloguer_ajustat'] < quantile_66_compra:
        gdf_compra_districtes.at[index, 'categoria'] = 'rang mitjà'
    elif row['lloguer_ajustat'] >= quantile_66_compra:
        gdf_compra_districtes.at[index, 'categoria'] = 'rang alt'

gdf_compra_barris['categoria'] = None
for index, row in gdf_compra_barris.iterrows():
    if row['lloguer_ajustat'] == 'nd':
        gdf_compra_barris.at[index, 'categoria'] = 'nd'
    elif row['lloguer_ajustat'] < quantile_33_compra:
        gdf_compra_barris.at[index, 'categoria'] = 'rang baix'
    elif quantile_33_compra <= row['lloguer_ajustat'] < quantile_66_compra:
        gdf_compra_barris.at[index, 'categoria'] = 'rang mitjà'
    elif row['lloguer_ajustat'] >= quantile_66_compra:
        gdf_compra_barris.at[index, 'categoria'] = 'rang alt'

def mapa_districtes(any, compra_lloguer, habitatges_turistics):
    if compra_lloguer == 'Lloguer':
        gdf_districtes_mapa = gdf_lloguer_districtes[gdf_lloguer_districtes['any'] == any]
    else:
        gdf_districtes_mapa = gdf_compra_districtes[gdf_compra_districtes['any'] == any]
    
    colors = {'rang baix': 'green', 'rang mitjà': 'yellow', 'rang alt': 'red'}
    mapa = folium.Map(location=[41.3851, 2.1734], zoom_start=11)

    folium.GeoJson(
        gdf_districtes_mapa,
        style_function=lambda feature: {
            'fillColor': colors.get(feature['properties'].get('categoria', 'grey'), 'grey'),
            'color': 'black',
            'weight': 2,
            'fillOpacity': 0.5
        },
        tooltip=folium.GeoJsonTooltip(
            fields=['NOM'],
            aliases=['Barri:'],
            localize=True,
        ),
        popup=folium.GeoJsonPopup(
            fields=['NOM', 'lloguer'],
            aliases=['Barri:', 'Lloguer mitjà:'],
            localize=True
        ),
        highlight_function=lambda x: {'weight': 3, 'color': 'blue'}
    ).add_to(mapa)

    if habitatges_turistics:
        fol = folium.FeatureGroup(name='Habitatges turístics')
        for id, fila in df_habitatges_turistic.iterrows():
            folium.CircleMarker(
                location=[fila['LATITUD_Y'], fila['LONGITUD_X']],
                radius=0.05,
                color='blue',
                fill=True,
                fill_color='blue',
                fill_opacity=0.6,
                popup=fila.get('CARRER', 'No hi ha adressa')
            ).add_to(fol)
        fol.add_to(mapa)
        folium.LayerControl().add_to(mapa)

    return mapa

def mapa_barris(any, compra_lloguer, habitatges_turistics):
    if compra_lloguer == 'Lloguer':
        gdf_barris_mapa = gdf_lloguer_barris[gdf_lloguer_barris['any_y'] == any]
    else:
        gdf_barris_mapa = gdf_compra_barris[gdf_compra_barris['any_y'] == any]
    
    colors = {'rang baix': 'green', 'rang mitjà': 'yellow', 'rang alt': 'red'}
    mapa = folium.Map(location=[41.3851, 2.1734], zoom_start=11)

    folium.GeoJson(
        gdf_barris_mapa,
        style_function=lambda feature: {
            'fillColor': colors.get(feature['properties'].get('categoria', 'grey'), 'grey'),
            'color': 'black',
            'weight': 2,
            'fillOpacity': 0.5
        },
        tooltip=folium.GeoJsonTooltip(
            fields=['NOM'],
            aliases=['Barri:'],
            localize=True,
        ),
        popup=folium.GeoJsonPopup(
            fields=['NOM', 'lloguer'],
            aliases=['Barri:', 'Lloguer mitjà:'],
            localize=True
        ),
        highlight_function=lambda x: {'weight': 2, 'color': 'blue'}
    ).add_to(mapa)

    if habitatges_turistics:
        fol = folium.FeatureGroup(name='Habitatges turístics')
        for id, fila in df_habitatges_turistic.iterrows():
            folium.CircleMarker(
                location=[fila['LATITUD_Y'], fila['LONGITUD_X']],
                radius=0.05,
                color='blue',
                fill=True,
                fill_color='blue',
                fill_opacity=0.6,
                popup=fila.get('CARRER', 'No hi ha adressa')
            ).add_to(fol)
        fol.add_to(mapa)
        folium.LayerControl().add_to(mapa)
        
    return mapa

# Streamlit UI
st.title("Sector de l'habitatge a Barcelona")

opcio_barris_districtes = st.radio(
    "Selecciona tipus de mapa:",
    ('Mapa de Barris', 'Mapa de Districtes')
)

opcio_compra_lloguer = st.radio(
    "Selecciona entre les opcions compra i lloguer:",
    ('Compra', 'Lloguer')
)

opcio_any = st.selectbox(
    "Selecciona l'any:",
    range(2013, 2024)
)

opcio_habitatges_turistics = st.checkbox('Habitatges turístics')

if opcio_barris_districtes == 'Mapa de Barris':
    mapa = mapa_barris(opcio_any, opcio_compra_lloguer, opcio_habitatges_turistics)
else:
    mapa = mapa_districtes(opcio_any, opcio_compra_lloguer, opcio_habitatges_turistics)

st_folium(mapa, width=700, height=500)

st.header("Lloguer i renda per districtes del 2015 al 2021")
districtes_seleccionats = st.multiselect(
    "Selecciona districtes:",
    df_renda_lloguer['Districtes municipals'].unique(),
    default=['Barcelona']
)

df_compra_seleccio = df_renda_lloguer[df_renda_lloguer['Districtes municipals'].isin(districtes_seleccionats)]

fig = px.line(df_compra_seleccio, x='Any', y='mitjana_preu_lloguer', color='Districtes municipals',
              labels={'mitjana_preu_lloguer': 'Mitjana Preu Lloguer'}, title="Mitjana Preu Lloguer")

linea_renda = px.line(df_compra_seleccio, x='Any', y='renda_mitjana_mensual', color='Districtes municipals',
                      labels={'renda_mitjana_mensual': 'Renda Mitjana Mensual'}, title="Renda Mitjana Mensual")

for tipus_linea in linea_renda.data:
    tipus_linea.update(line=dict(dash='dash'))
    fig.add_trace(tipus_linea)

fig.update_layout(
    xaxis_title="Any",
    yaxis_title="Cantidad",
    legend_title="Districtes municipals",
    template="plotly_white"
)

fig.update_traces(mode='lines+markers')
fig.update_yaxes(title_text="Mitjana preu lloguer / Renda mitjana mensual")

st.plotly_chart(fig)

st.header("Evolució de l'obra nova i el padró a Barcelona")
opcio_grafic_barres = st.selectbox(
    "Selecciona l'any per a la gràfica de barres:",
    anys
)

df_any = df_padro_obra_nova_districtes[df_padro_obra_nova_districtes['any'] == opcio_grafic_barres]
fig_barres = go.Figure(data=[
    go.Bar(name='Obra Nova', x=df_any['districtes municipals'], y=df_any['obra_nova']),
    go.Bar(name='Evolució del Padró', x=df_any['districtes municipals'], y=df_any['evolucio_padro'], marker_pattern_shape="/")
])
fig_barres.update_layout(
    title=f"Evolució de l'obra nova i el padró a Barcelona - {opcio_grafic_barres}",
    xaxis_title="Districtes",
    yaxis_title="Valor",
    barmode='group',
    xaxis_tickangle=-45,
    yaxis=dict(range=[-25000, 25000])
)

st.plotly_chart(fig_barres)

